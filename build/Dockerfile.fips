# Use Ubuntu 16.04 as the base image
FROM ubuntu:16.04

# Define Go version
ARG GO_VERSION=1.21.6

# Install required tools and libraries
RUN apt-get update && \
    apt-get install -y \
        software-properties-common && \
    apt-get clean

# Add toolchain PPA
RUN add-apt-repository ppa:ubuntu-toolchain-r/test && \
    apt-get update && \
    apt-get clean

# Install core dependencies
RUN apt-get update && \
    apt-get install -y \
        curl \
        gnupg2 \
        gnupg-agent \
        build-essential \
        rpm \
        unzip \
        zip \
        git \
        cmake \
        wget && \
    apt-get clean

# Install cross-compilers incrementally and log each step
RUN apt-get update && \
    apt-get install -y gcc-arm-linux-gnueabi && echo "Installed gcc-arm-linux-gnueabi" && \
    apt-get install -y gcc-aarch64-linux-gnu && echo "Installed gcc-aarch64-linux-gnu" && \
    apt-get install -y gcc-mips-linux-gnu && echo "Installed gcc-mips-linux-gnu" && \
    apt-get install -y gcc-mips64-linux-gnu && echo "Installed gcc-mips64-linux-gnu" && \
    apt-get install -y gcc-mips64el-linux-gnu && echo "Installed gcc-mips64el-linux-gnu" && \
    apt-get install -y gcc-ppc64le-linux-gnu && echo "Installed gcc-ppc64le-linux-gnu" && \
    apt-get install -y gcc-s390x-linux-gnu && echo "Installed gcc-s390x-linux-gnu" && \
    apt-get clean
# Install Go 1.21.6
RUN curl -sSL https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && \
    rm go${GO_VERSION}.linux-amd64.tar.gz

# Set Go environment variables
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"

# Define build-time arguments for the GitHub CLI version and architecture
ARG GH_VERSION='2.0.0'
ARG GH_ARCH='amd64'

# Download and install the GitHub CLI
RUN curl -L https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_${GH_ARCH}.deb -o gh_${GH_VERSION}_linux_${GH_ARCH}.deb && \
    dpkg -i gh_${GH_VERSION}_linux_${GH_ARCH}.deb && \
    rm gh_${GH_VERSION}_linux_${GH_ARCH}.deb
    
# Optional: Set Go environment flags
ENV GOFLAGS="-buildvcs=false"

# Optional: Configure git
RUN git config --global --add safe.directory /go/src/github.com/newrelic/infrastructure-agent

# # Install BoringSSL
# RUN git clone https://github.com/google/boringssl.git /boringssl && \
#     mkdir /boringssl/build && \
#     cd /boringssl/build && \
#     cmake .. && \
#     make

# # Set environment variables for CGO to use BoringSSL
# ENV CGO_CFLAGS="-I/boringssl/include"
# ENV CGO_LDFLAGS="-L/boringssl/build/ssl -L/boringssl/build/crypto"
