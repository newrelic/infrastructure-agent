name: . üöÄ üêß Prerelease Linux

on:
  release:
    types:
      - prereleased
    tags:
      - '*'

jobs:
  unit-test:
    uses: ./.github/workflows/component_linux_unit_test.yml
    secrets:
      gh_token: ${{secrets.GITHUB_TOKEN}}

  proxy-tests:
    uses: ./.github/workflows/component_linux_proxy_test.yml
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}

  packaging-amd64:
    needs: [unit-test, proxy-tests]
    uses: ./.github/workflows/component_linux_packaging.yml
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_MAIL: 'infrastructure-eng@newrelic.com'
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      TAG:  ${{ github.event.release.tag_name }}
      ARCH: 'amd64'

  packaging-arm:
    needs: [unit-test, proxy-tests]
    uses: ./.github/workflows/component_linux_packaging.yml
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_MAIL: 'infrastructure-eng@newrelic.com'
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      TAG:  ${{ github.event.release.tag_name }}
      ARCH: 'arm'

  packaging-arm64:
    needs: [unit-test, proxy-tests]
    uses: ./.github/workflows/component_linux_packaging.yml
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_MAIL: 'infrastructure-eng@newrelic.com'
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      TAG:  ${{ github.event.release.tag_name }}
      ARCH: 'arm64'

  packaging-legacy:
    needs: [unit-test, proxy-tests]
    uses: ./.github/workflows/component_linux_packaging.yml
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_MAIL: 'infrastructure-eng@newrelic.com'
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      TAG:  ${{ github.event.release.tag_name }}
      ARCH: 'legacy'

  packaging-docker:
    needs: [unit-test, proxy-tests]
    uses: ./.github/workflows/component_docker_packaging.yml
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_MAIL: 'infrastructure-eng@newrelic.com'
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      TAG:  ${{ github.event.release.tag_name }}

  docker-trivy-critical:
    needs: [packaging-docker]
    uses: ./.github/workflows/component_trivy.yml
    with:
      tag: "${{ github.event.release.tag_name }}-rc"
      severity: "CRITICAL"

  publishing-to-s3:
    # point to staging after tests
    name: Publish linux artifacts into s3 staging bucket
    uses: ./.github/workflows/component_linux_publish.yml
    needs: [packaging-amd64, packaging-arm, packaging-arm64, packaging-legacy]
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      AWS_ACCESS_KEY_ID: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_STAGING }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_STAGING }}
      AWS_ROLE_ARN: ${{ secrets.OHAI_AWS_ROLE_ARN_STAGING }}
      AWS_ROLE_SESSION_NAME: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_STAGING }}
    with:
      ACCESS_POINT_HOST: "staging"
      SCHEMA_BRANCH: "master"
      RUN_ID: ${{ github.run_id }}
      TAG: ${{ github.event.release.tag_name }}
      AWS_S3_BUCKET_NAME: "nr-downloads-ohai-staging"
      AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-staging"
      ASSETS_TYPE: "all"

  molecule-packaging-tests:
    uses: ./.github/workflows/component_molecule_packaging.yml
    needs: [publishing-to-s3]
    with:
      TAG: ${{ github.event.release.tag_name }}
      REPO_ENDPOINT: "http://nr-downloads-ohai-staging.s3-website-us-east-1.amazonaws.com/infrastructure_agent"

  test-prerelease-linux:
    needs: [molecule-packaging-tests]
    uses: ./.github/workflows/component_prerelease_testing.yml
    with:
      PLATFORM: "linux"
      TAG: ${{ github.event.release.tag_name }}
      TAG_OR_UNIQUE_NAME: "${{ github.event.release.tag_name }}-linux"
    secrets:
      AWS_VPC_SUBNET: ${{secrets.AWS_VPC_SUBNET}}
      CROWDSTRIKE_CLIENT_ID: ${{secrets.CROWDSTRIKE_CLIENT_ID}}
      CROWDSTRIKE_CLIENT_SECRET: ${{secrets.CROWDSTRIKE_CLIENT_SECRET}}
      CROWDSTRIKE_CUSTOMER_ID: ${{secrets.CROWDSTRIKE_CUSTOMER_ID}}

  canaries-linux:
    needs: [test-prerelease-linux]
    uses: ./.github/workflows/component_canaries.yml
    with:
      PLATFORM: "linux"
      TAG: ${{ github.event.release.tag_name }}
    secrets:
      AWS_VPC_SUBNET: ${{secrets.AWS_VPC_SUBNET}}
      CROWDSTRIKE_CLIENT_ID: ${{secrets.CROWDSTRIKE_CLIENT_ID}}
      CROWDSTRIKE_CLIENT_SECRET: ${{secrets.CROWDSTRIKE_CLIENT_SECRET}}
      CROWDSTRIKE_CUSTOMER_ID: ${{secrets.CROWDSTRIKE_CUSTOMER_ID}}

  prune-canaries-linux:
    needs: [canaries-linux]
    uses: ./.github/workflows/component_canaries_prune.yml
    with:
      PLATFORM: "linux"
    secrets:
      AWS_VPC_SUBNET: ${{secrets.AWS_VPC_SUBNET}}
