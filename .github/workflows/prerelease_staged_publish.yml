name: Staged pre-release for Linux, Windows

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to pre-release'
        required: true
      assetsType:
        description: 'Assets type to pre-release: all, targz, zip, msi, deb, rpm'
        required: true
        default: 'all'

env:
  GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }}
  TAG: ${{ github.event.inputs.tag }}
  DOCKER_HUB_ID: ${{ secrets.OHAI_DOCKER_HUB_ID }}
  DOCKER_HUB_PASSWORD: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
  SCHEMA_BRANCH: ${{ github.event.release.tag_name }}
  AWS_S3_BUCKET_NAME: "nr-downloads-ohai-staging"
  AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-staging"
  AWS_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_STAGING }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_STAGING }}
  AWS_ROLE_ARN: ${{ secrets.OHAI_AWS_ROLE_ARN_STAGING }}
  AWS_ROLE_SESSION_NAME: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_STAGING }}

jobs:
  publishing-to-s3-linux:
    name: Publish linux artifacts into s3 staging bucket
    runs-on: ubuntu-20.04

    strategy:
      max-parallel: 1
      matrix:
        assetsType:
          - "targz"
          - "deb"
          - "rpm"

    steps:
      - name: Login to DockerHub
        if: ${{ github.event.inputs.assetsType == 'all' || github.event.inputs.assetsType == matrix.assetsType }}
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}
      - name: Publish ${{ matrix.assetsType }} to S3 action
        if: ${{ github.event.inputs.assetsType == 'all' || github.event.inputs.assetsType == matrix.assetsType }}
        uses: newrelic/infrastructure-publish-action@v1.0.13
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ env.AWS_ROLE_ARN }}
          AWS_ROLE_SESSION_NAME: ${{ env.AWS_ROLE_SESSION_NAME }}
        with:
          tag: ${{env.TAG}}
          app_name: "newrelic-infra"
          repo_name: "newrelic/infrastructure-agent"
          schema: "custom"
          schema_url: "https://raw.githubusercontent.com/newrelic/infrastructure-agent/${{ env.SCHEMA_BRANCH }}/build/upload-schema-linux-${{ matrix.assetsType }}.yml"
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
          access_point_host: "staging"
          run_id: ${{ github.run_id }}
          aws_region: ${{ env.AWS_REGION }}
          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
          # used for signing package stuff
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}

  publishing-to-s3-windows:
    name: Publish windows artifacts into s3 staging bucket
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        assetsType:
          - "msi"
          - "zip"

    steps:
      - name: Login to DockerHub
        if: ${{ github.event.inputs.assetsType == 'all' || github.event.inputs.assetsType == matrix.assetsType }}
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}
      - name: Publish ${{ matrix.assetsType }} to S3 action
        if: ${{ github.event.inputs.assetsType == 'all' || github.event.inputs.assetsType == matrix.assetsType }}
        uses: newrelic/infrastructure-publish-action@v1.0.13
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ env.AWS_ROLE_ARN }}
          AWS_ROLE_SESSION_NAME: ${{ env.AWS_ROLE_SESSION_NAME }}
        with:
          tag: ${{env.TAG}}
          app_name: "newrelic-infra"
          repo_name: "newrelic/infrastructure-agent"
          schema: "custom"
          schema_url: "https://raw.githubusercontent.com/newrelic/infrastructure-agent/${{ env.SCHEMA_BRANCH }}/build/upload-schema-windows-${{ matrix.assetsType }}.yml"
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
          # used for signing package stuff - required for action, not needed for msi
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}
          disable_lock: true
          aws_region: ${{ env.AWS_REGION }}
