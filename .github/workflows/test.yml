---
name: Testing

env:
  DOCKER_HUB_ID: ${{ secrets.OHAI_DOCKER_HUB_ID }}
  DOCKER_HUB_PASSWORD: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
  TAG: "0.0.0" # needed for goreleaser test builds
  GO_VERSION: '1.14.4'

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - README.md
jobs:
  unit-test-linux:
    name: Linux unit tests
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Validate code
        run: make ci/validate

      - name: Running unit tests
        run: make ci/test-coverage

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
          flag-name: run-linux
          parallel: true

  harvest-test-linux:
    name: Linux harvest tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-16.04 ]
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        run: sudo apt install musl-dev

      - name: Running Harvest tests
        run: make linux/harvest-tests

  unit-test-windows:
    name: Windows unit tests
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Download deps
        run: go mod vendor

      - name: Running unit tests
        run: build\windows\test.ps1

  proxy-tests-linux:
    name: Proxy tests
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Running proxy tests
        run: make proxy-test

  build-container:
    name: Building containerized agent
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Build agent binaries
        run: make ci/build

      - name: Build container agent (amd64)
        run: make -C build/container/ build/base-amd64

      - name: Build container agent (arm)
        run: make -C build/container/ build/base-arm

      - name: Build container agent (arm64)
        run: make -C build/container/ build/base-arm64

  finish:
    name: Finish
    needs: [ unit-test-linux ]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  test-build:
    name: Test binary compilation for all platforms:arch
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}
      - name: Build all platforms:arch
        run: make ci/build
