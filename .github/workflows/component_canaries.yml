name: .. 🚧 🐤 Canaries

on:
  workflow_call:
    secrets:
      AWS_VPC_SUBNET:
        required: true


    inputs:
      TAG:
        required: true
        type: string
      PLATFORM:
        required: true
        type: string
      A2Q:
        required: true
        default: 'true'
        type: string

env:
  AWS_ASSUME_ROLE: 'arn:aws:iam::971422713139:role/caos-pipeline-oidc-infra-agent'
  ANSIBLE_FORKS: 5

permissions:
  id-token: write

jobs:
  canaries_linux:
    runs-on: ubuntu-latest
    if: ${{ inputs.PLATFORM == 'linux' }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: ap-southeast-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Add to env current and previous versions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: .github/workflows/scripts/set_version.sh ${{ inputs.TAG }}

      - name: set vars for legibility (state, inventory ...)
        run: |
          if [[ "${{ inputs.A2Q }}" == "true" ]]; then
              echo "TERRAFORM_STATE=a2q-canaries-${{ inputs.PLATFORM }}-${{ inputs.TAG }}"  >> $GITHUB_ENV
              echo "INVENTORY_OUTPUT=/srv/runner/inventory/a2q-canary-${{ inputs.TAG }}-${{ inputs.PLATFORM }}-inventory.ec2"  >> $GITHUB_ENV


      - name: Provision instances ${{ inputs.PLATFORM }}
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: ap-southeast-2
          container_make_target: "-C test/provision TERRAFORM_STATE_KEY=${{ env.TERRAFORM_STATE }} PREFIX=canary INVENTORY_OUTPUT=${{ env.INVENTORY_OUTPUT }} TAG_OR_UNIQUE_NAME=${{ inputs.TAG }} PLATFORM=${{ inputs.PLATFORM }}  IS_A2Q=${{ inputs.A2Q }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"
          log_filters: |
            \[ALLOW_MSG\].+
            TASK\s\[.*\]\s
            PLAY\s\[.*\]\s
            PLAY\sRECAP\s
            Apply\scomplete!
            ok=\d+\s+changed=\d+\s+unreachable=\d+\s+failed=\d+\s+skipped=\d+\s+rescued=\d+\s+ignored=\d+

      - name: Install Infra Agent
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: ap-southeast-2
          container_make_target: "-C test/canaries terraform-canaries ANSIBLE_INVENTORY=${{ env.INVENTORY_OUTPUT }} PLATFORM=${{ inputs.PLATFORM }} ANSIBLE_FORKS=${{ env.ANSIBLE_FORKS }} VERSION=${{ env.NR_VERSION }} IS_A2Q=${{ inputs.A2Q }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"


    