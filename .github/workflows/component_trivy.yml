name: .. üöß üïµüèº Trivy

on:
  workflow_call:
    secrets:
      slack_webhook:
        required: false
    inputs:
      tag:
        required: true
        type: string
      severity:
        required: true
        type: string
      FIPS:
        required: false
        type: boolean
        default: false

env:
  FIPS: ${{ inputs.FIPS == true && '-fips' || '' }}

jobs:
  trivy_scanner:
    name: Trivy scanner for docker
    runs-on: ubuntu-latest
    if: ${{ ! github.event.schedule }} # Table output
    steps:
      - name: newrelic/infrastructure
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/newrelic/infrastructure${{ env.FIPS }}:${{ inputs.tag }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: "${{ inputs.severity }}"
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db

      - name: newrelic/k8s-events-forwarder
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/newrelic/k8s-events-forwarder${{ env.FIPS }}:${{ inputs.tag }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: "${{ inputs.severity }}"
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db

      - name: newrelic/nri-forwarder
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/newrelic/nri-forwarder${{ env.FIPS }}:${{ inputs.tag }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: "${{ inputs.severity }}"
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db

  trivy_scanner_scheduled:
    name: Scheduled Trivy scanner for docker
    runs-on: ubuntu-latest
    if: ${{ github.event.schedule }} # Upload sarif when running periodically
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Sarif newrelic/infrastructure
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/newrelic/infrastructure${{ env.FIPS }}:${{ inputs.tag }}"
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: "${{ inputs.severity }}"
          exit-code: '1'
          ignore-unfixed: true
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ always() }}
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Send notification to Slack Workflow
        if: ${{ failure() }}
        id: slack
        uses: slackapi/slack-github-action@v1.22.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "text": ":rotating_light: Hi CAOS (@hero), critical or high vulnerabilities found, see: https://github.com/newrelic/infrastructure-agent/security/code-scanning?query=is%3Aopen+branch%3Amaster+tool%3ATrivy :rotating_light:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook }}
