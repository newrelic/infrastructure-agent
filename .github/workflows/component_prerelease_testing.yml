name: .. ðŸš§ Test pre-release

# 2 copy of packaging and canaries jobs required to split workflow path, but keep in the same component to reuse other jobs
# - packaging-tests-linux & packaging-tests-windows are almost the same
# - canaries-linux & canaries-windows are almost the same


on:
  workflow_call:
    secrets:
      AWS_VPC_SUBNET:
        required: true
      CROWDSTRIKE_CLIENT_ID:
        required: true
      CROWDSTRIKE_CLIENT_SECRET:
        required: true
      CROWDSTRIKE_CUSTOMER_ID:
        required: true

    inputs:
      TAG:
        required: true
        type: string
      PLATFORM:
        required: true
        type: string
      TAG_OR_UNIQUE_NAME:
        required: true
        type: string

env:
  AWS_ASSUME_ROLE: 'arn:aws:iam::018789649883:role/caos-pipeline-oidc-infra-agent'
  ANSIBLE_FORKS: 20

permissions:
  id-token: write

jobs:
  provision:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: us-east-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Provision instances ${{ inputs.PLATFORM }}
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "test/provision TERRAFORM_STATE_KEY=${{ inputs.TAG_OR_UNIQUE_NAME }} PREFIX=pkg-tests INVENTORY_OUTPUT=/srv/runner/inventory/${{ inputs.TAG_OR_UNIQUE_NAME }}-inventory.ec2 TAG_OR_UNIQUE_NAME=${{ inputs.TAG_OR_UNIQUE_NAME }} PLATFORM=${{ inputs.PLATFORM }} CROWDSTRIKE_CLIENT_ID=${{ secrets.CROWDSTRIKE_CLIENT_ID }} CROWDSTRIKE_CLIENT_SECRET=${{ secrets.CROWDSTRIKE_CLIENT_SECRET }} CROWDSTRIKE_CUSTOMER_ID=${{ secrets.CROWDSTRIKE_CUSTOMER_ID }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"
          log_filters: |
            \[ALLOW_MSG\].+
            TASK\s\[.*\]\s
            PLAY\s\[.*\]\s
            PLAY\sRECAP\s
            Apply\scomplete!
            ok=\d+\s+changed=\d+\s+unreachable=\d+\s+failed=\d+\s+skipped=\d+\s+rescued=\d+\s+ignored=\d+

  harvest-tests:
    needs: [ provision ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: us-east-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Launch harvest tests
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "test/automated/harvest PLATFORM=${{ inputs.PLATFORM }} ANSIBLE_FORKS=${{ env.ANSIBLE_FORKS }} ANSIBLE_INVENTORY_FOLDER=/srv/runner/inventory ANSIBLE_INVENTORY_FILE=${{ inputs.TAG_OR_UNIQUE_NAME }}-inventory.ec2 TAG=${{ inputs.TAG }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"

  packaging-tests-linux:
    if: ${{ inputs.PLATFORM == 'linux' }}
    strategy:
      fail-fast: false # i.e. don't cancel amd64 if arm64 fails
      matrix:
        limit:
          - "linux_amd64"
          - "linux_arm64"

    needs: [ harvest-tests ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: us-east-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Launch packaging tests
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "test/automated/packaging LIMIT=${{ matrix.limit }} PLATFORM=${{ inputs.PLATFORM }} ANSIBLE_FORKS=${{ env.ANSIBLE_FORKS }}  ANSIBLE_INVENTORY_FOLDER=/srv/runner/inventory ANSIBLE_INVENTORY_FILE=${{ inputs.TAG_OR_UNIQUE_NAME }}-inventory.ec2 TAG=${{ inputs.TAG }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"

  packaging-tests-windows:
    if: ${{ inputs.PLATFORM == 'windows' }}
    needs: [ harvest-tests ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: us-east-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Launch packaging tests
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "test/automated/packaging LIMIT=windows_amd64 PLATFORM=${{ inputs.PLATFORM }} ANSIBLE_FORKS=${{ env.ANSIBLE_FORKS }}  ANSIBLE_INVENTORY_FOLDER=/srv/runner/inventory ANSIBLE_INVENTORY_FILE=${{ inputs.TAG_OR_UNIQUE_NAME }}-inventory.ec2 TAG=${{ inputs.TAG }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"

  provision-clean-linux:
    if: ${{ inputs.PLATFORM == 'linux' }}
    needs: [ packaging-tests-linux ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: us-east-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Clean instances ${{ inputs.PLATFORM }}
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "test/provision/clean TERRAFORM_STATE_KEY=${{ inputs.TAG_OR_UNIQUE_NAME }}  TAG_OR_UNIQUE_NAME=${{ inputs.TAG_OR_UNIQUE_NAME }}"
          ecs_cluster_name: caos_infra_agent
          task_definition_name: infra-agent
          cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
          cloud_watch_logs_stream_name: ecs/test-prerelease
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: "newrelic/infrastructure-agent"
          ref: "${{ env.GIT_BRANCH }}"
          log_filters: |
            \[ALLOW_MSG\].+
            TASK\s\[.*\]\s
            PLAY\s\[.*\]\s
            PLAY\sRECAP\s
            Apply\scomplete!
            ok=\d+\s+changed=\d+\s+unreachable=\d+\s+failed=\d+\s+skipped=\d+\s+rescued=\d+\s+ignored=\d+

  provision-clean-windows:
      if: ${{ inputs.PLATFORM == 'windows' }}
      needs: [ packaging-tests-windows ]
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
            aws-region: us-east-2

        - name: Set branch name
          run: |
            # Short name for current branch. For PRs, use target branch (base ref)
            GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
            # Is the ref a tag? If so, remove refs/tags/ prefix
            GIT_BRANCH=${GIT_BRANCH#refs/tags/}
            echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

        - name: Clean instances ${{ inputs.PLATFORM }}
          uses: newrelic/fargate-runner-action@main
          with:
            aws_region: us-east-2
            container_make_target: "test/provision/clean TERRAFORM_STATE_KEY=${{ inputs.TAG_OR_UNIQUE_NAME }} TAG_OR_UNIQUE_NAME=${{ inputs.TAG_OR_UNIQUE_NAME }}"
            ecs_cluster_name: caos_infra_agent
            task_definition_name: infra-agent
            cloud_watch_logs_group_name: /ecs/test-prerelease-infra-agent
            cloud_watch_logs_stream_name: ecs/test-prerelease
            aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
            repo_name: "newrelic/infrastructure-agent"
            ref: "${{ env.GIT_BRANCH }}"
            log_filters: |
              \[ALLOW_MSG\].+
              TASK\s\[.*\]\s
              PLAY\s\[.*\]\s
              PLAY\sRECAP\s
              Apply\scomplete!
              ok=\d+\s+changed=\d+\s+unreachable=\d+\s+failed=\d+\s+skipped=\d+\s+rescued=\d+\s+ignored=\d+
