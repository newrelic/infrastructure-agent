#TBD - some arguments were not possible to pass
name: .. ðŸš§ Windows | Produce packages

on:
  workflow_call:
    secrets:
      PFX_CERTIFICATE_BASE64:
        required: true
      PFX_PASSPHRASE:
        required: true
    inputs:
      PFX_CERTIFICATE_DESCRIPTION:
        required: true
        type: string
      TAG:
        required: true
        type: string
      GOPATH:
        required: true
        type: string
      GITHUB_SHA:
        required: true
        type: string

env:
  PFX_CERTIFICATE_BASE64: ${{ secrets.PFX_CERTIFICATE_BASE64 }}
  PFX_PASSPHRASE: ${{ secrets.PFX_PASSPHRASE }}
  PFX_CERTIFICATE_DESCRIPTION: ${{ inputs.PFX_CERTIFICATE_DESCRIPTION }}
  TAG: ${{ inputs.TAG }}
  GOPATH: ${{ inputs.GOPATH }}
  GITHUB_SHA: ${{ inputs.GITHUB_SHA }}

jobs:
  packaging:
    name: Create MSI & Upload into GH Release assets
    runs-on: windows-2019
    env:
      GOPATH: ${{ env.GOPATH }}
    defaults:
      run:
        working-directory: src/github.com/newrelic/infrastructure-agent

    strategy:
      matrix:
        goarch: [ amd64, 386 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: src/github.com/newrelic/infrastructure-agent

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Get PFX certificate from GH secrets
        shell: bash
        run: printf "%s" "$PFX_CERTIFICATE_BASE64" | base64 -d - > wincert.pfx

      - name: Import PFX certificate
        shell: pwsh
        run: build\windows\scripts\import_certificates.ps1 -pfx_passphrase "$env:PFX_PASSPHRASE" -pfx_certificate_description "$env:PFX_CERTIFICATE_DESCRIPTION"

      - name: Set date environment variable for buildDate metadata
        run: echo buildDate=$(date -u +"%Y-%m-%dT%H:%M:%SZ") >> $GITHUB_ENV
        shell: bash

      - name: Build executables ${{ matrix.goarch }}
        shell: pwsh
        run: build\windows\build.ps1 -arch ${{ matrix.goarch }} -version ${{env.TAG}} -commit "$env:GITHUB_SHA" -date ${{env.buildDate}}

      - name: Create MSI package ${{ matrix.goarch }}
        shell: pwsh
        run: build\windows\package_msi.ps1 -arch ${{ matrix.goarch }} -version ${{env.TAG}}

      - name: Create zip package ${{ matrix.goarch }}
        shell: pwsh
        run: build\windows\package_zip.ps1 -arch ${{ matrix.goarch }} -version ${{env.TAG}}

      - name: Generate checksum files
        uses: ./src/github.com/newrelic/infrastructure-agent/.github/actions/generate-checksums
        with:
          files_regex: '.*zip\|.*msi'
          files_path: './src/github.com/newrelic/infrastructure-agent/dist'

      - name: Upload MSI to GH
        shell: bash
        run: build/upload_artifacts_gh.sh
