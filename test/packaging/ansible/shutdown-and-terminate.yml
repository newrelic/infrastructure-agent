---

- name: install agent linux (HNR)
  hosts: testing_hosts_linux
  gather_facts: yes
  become: true
  vars:
    agent_user: root
    env_vars:

  pre_tasks:
    - name: initial cleanup # Only required for shared infra.
      include_role:
        name: cleanup

  tasks:
    - name: repo setup
      include_role:
        name: repo-setup

    - name: setup config
      include_role:
        name: setup-config
      vars:
        display_name: "{{ iid }}:{{ inventory_hostname }}"

    - name: install agent
      include_role:
        name: agent-install

    - name: assert service
      include_role:
        name: assert-service

- name: install agent windows  (HNR)
  hosts: testing_hosts_windows
  gather_facts: yes

  tasks:
    - name: setup config
      include_role:
        name: setup-config
      vars:
        display_name: "{{ iid }}:{{ inventory_hostname }}"

    - name: install agent
      include_role:
        name: agent-install
      vars:
        display_name: "{{ iid }}:{{ inventory_hostname }}"

    - name: assert service
      include_role:
        name: assert-service

- name: test agent behaviour on host shutdown
  hosts: testing_hosts
  vars:
    # Add here hosts of the instances that doesn't support Smart HNR (shutdown detection) e.g. - "amd64:ubuntu14.04"
    instances_not_supporting_shutdown_detection: {
      "amd64:debian-jessie"
    }

    host_supports_shutdown_detection: >-
      {{
        true if inventory_hostname not in instances_not_supporting_shutdown_detection
        else false
      }}

  tasks:
    - name: pause a bit to let the agent send some data
      pause:
        minutes: 1

    - name: restart the agent
      include_role:
        name: agent-restart

    - name: pause for a bit to let the agent initialize
      pause:
        seconds: 30

    - name: assert agent restart don't trigger shutdown event
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "shutdown"
        expect_event: false
        since_sec_ago: 30

    - name: stop instances
      include_role:
        name: ec2-stop

    - name: assert that the agent detecteded host shutdown and disconnected from the backend (only on hosts that support shutdown detection)
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "shutdown"
        expect_event: "{{ host_supports_shutdown_detection }}"
        since_sec_ago: "{{ now(True, '%s') | int - ec2_stop_time_sec | int }}"

    - name: start instances
      include_role:
        name: ec2-start

    - name: assert the agent performed connect to the backend (only on hosts that support shutdown detection)
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "running"
        expect_event: "{{ host_supports_shutdown_detection }}"
        since_sec_ago: "{{ now(True, '%s') | int - ec2_start_time_sec | int }}"

    - name: terminate instances
      include_role:
        name: ec2-terminate

    - name: assert that the agent detecteded host termination and disconnected from the backend (only on hosts that support shutdown detection)
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "shutdown"
        expect_event: "{{ host_supports_shutdown_detection }}"
        since_sec_ago: "{{ now(True, '%s') | int - ec2_terminate_time_sec | int }}"
...
