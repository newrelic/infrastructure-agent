---

- name: check we installed the correct version
  shell: "newrelic-infra --version"
  register: check

- name: output current agent version
  debug:
    msg: "{{ check.stdout }}"

# agent user assertions:

- name: stat on run folder
  stat:
    path: '{{ run_folder }}'
  register: st
  failed_when: st.stat.exists == False

- name: assert run folder belong to the agent user
  assert:
    that: st.stat.pw_name == '{{ agent_user }}'

- name: stat on log folder
  stat:
    path: '{{ log_folder }}'
  register: st
  failed_when: st.stat.exists == False

- name: assert log folder belong to the agent user
  assert:
    that: st.stat.pw_name == '{{ agent_user }}'

- name: stat on db folder
  stat:
    path: '{{ db_folder }}'
  register: st
  failed_when: st.stat.exists == False

- name: assert db folder belong to the agent user
  assert:
    that: st.stat.pw_name == '{{ agent_user }}'

- name: stat on etc folder
  stat:
    path: '{{ etc_folder }}'
  register: st
  failed_when: st.stat.exists == False

- name: assert etc folder belong to the agent user
  assert:
    that: st.stat.pw_name == '{{ agent_user }}'

- name: fetch agent process pid
  command: cat {{ pidfile }}
  register: pid

- name: fetch agent process owner
  command: ps -o user= -p {{ pid.stdout }}
  register: owner

- name: assert service is being run by the agent user
  assert:
    that: "'{{ owner.stdout }}' == '{{ agent_user }}'"

# infra=/usr/bin/newrelic-infra
#  getCap=$(command -v getcap) || getCap="/sbin/getcap" && [ -f $getCap ] || getCap="/usr/sbin/getcap" && [ -f $getCap ] || getCap=""
#  if [ ! -z $getCap ]; then
#  eval "$getCap $infra" | grep -e "cap_dac_read_search" | grep -e "cap_sys_ptrace"
#  fi

#- name: fetch getcap binary
#  command: getCap="/sbin/getcap" && [ -f $getCap ] || getCap="/usr/sbin/getcap" && [ -f $getCap ] || getCap=""
#  register: getcap

#TODO add check for user caps - eval "$getCap $infra" | grep -e "cap_dac_read_search" | grep -e "cap_sys_ptrace"
- name: check agent binary caps
  shell: getcap /usr/bin/newrelic-infra | grep -e "cap_dac_read_search" | grep -e "cap_sys_ptrace"
  register: getcap

- name: Print getcap result for CI
  debug:
    msg: "{{ getcap.stdout }}"

- name: assert caps are the same as expected
  assert:
    that: "'{{ getcap.stdout }}' == '/usr/bin/newrelic-infra = cap_dac_read_search,cap_sys_ptrace+ep'"

...
