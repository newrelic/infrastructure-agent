---

- name: ensure agent_version is provided
  fail:
    msg: "target_agent_version cannot be empty"
  when: target_agent_version is not defined or (target_agent_version | length) == 0

- name: get tag commit hash
  uri:
    url: "https://api.github.com/repos/newrelic/infrastructure-agent/git/ref/tags/{{ target_agent_version }}"
    method: GET
    return_content: yes
    status_code: 200
    body_format: json
    validate_certs: false
  register: http_result

- name: fail if tag commit cannot be retrieved
  fail:
    msg: "Cannot retrieve tag {{ target_agent_version }} commit"
  when: http_result.json.object.sha is not defined

- name: download brew formula
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/n/newrelic-infra-agent.rb"
    dest: "/Users/{{ ansible_user }}/newrelic-infra-agent.rb"

- name: replace tag
  ansible.builtin.replace:
    path: "/Users/{{ ansible_user }}/newrelic-infra-agent.rb"
    regexp: 'tag:(\s+)"[0-9\.]+",$'
    replace: 'tag:\1"{{ target_agent_version }}",'

- name: replace go version
  ansible.builtin.replace:
    path: "/Users/{{ ansible_user }}/newrelic-infra-agent.rb"
    regexp: 'depends_on "go@[0-9\.]+" => :build$'
    replace: 'depends_on "go@{{go_version}}" => :build'

- name: replace revision
  ansible.builtin.replace:
    path: "/Users/{{ ansible_user }}/newrelic-infra-agent.rb"
    regexp: 'revision:(\s+)"[a-f0-9]+"$'
    replace: 'revision:\1"{{ http_result.json.object.sha }}"'

- name: remove arch binding
  ansible.builtin.replace:
    path: "/Users/{{ ansible_user }}/newrelic-infra-agent.rb"
    regexp: 'depends_on arch: :x86_64'
    replace: '#depends_on arch: :x86_64'

...
